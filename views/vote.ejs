<!DOCTYPE html>
<html>
  <head>
    <title>Display Voting</title>
    <link rel='stylesheet' href='css/stylesheet.css' />
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
  </head>
  <body>
  	<div id="vote">
  		<div class="title"><h1>Select Your Favorite Computer Science Display</h1></div>
  		<!-- The grid of CS Open House Project cards -->
	    <section class="card-container">
			<% for(i=1;i<=displays.length;i++) {%>
			<!-- An individual card -->
	    	<div class="card" onclick="selectCard('v<%= i %>', '<%= displays[i-1]._id %>')" id="<%= i%>">
	    		<!-- Card checkmark (hidden by default) -->
	    		<div id="v<%= i %>" class="voted"><i class="fa fa-check fa-2x" aria-hidden="true"></i></div>
	    		<!-- Random Card Icon -->
	    		<figure class="card_icon">
	    			<img id="i<%= i %>">
	    		</figure>
	    		<!-- Display Name -->
	    		<header class="card_title">
	    			<h3><%= displays[i-1].name %></h3>
	    		</header>
			</div>
			<% } %>
	    </section> <!-- End Card section -->
	    <div class="btn-wrapper">
			<input type="hidden" name="currentSelected" value="">
			<input name="vote" type="Submit" class="btn btn-top-color" value="Vote" id="voteBtn">
		</div>
	</div> <!-- End voting page -->

	<div class="error" id="errormsg">
	  <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span> 
	  <b>ERROR:</b> Please select a card.
	</div>
  </body>

  <footer class="footer">
  	
  	<p>Copyright &copy; 2018. All Rights Reserved </p>
  	<p>Developed by <a href="http://www.RyanPaulWilliams.com">Ryan Williams</a>, <a href="https://github.com/cjmeeks">Clifford Meeks</a>, and <a href="https://github.com/djlovell">Danny Lovell</a></p>
  	<p>Icons made by <a href="https://www.freepik.com">Freepik</a> from <a href="https://www.flaticon.com">www.flaticon.com</a></p>
  </footer>

</html>

<script>
	/* The number of cards */
	var num_displays = <%= displays.length %>
	/* The Display ID of the selected card */
	var selected = null;
	/* The icon ID of the selected card */
	var selected_vote_id = null;

	/* The vote button */
	var votebtn = document.getElementById("voteBtn");
	/* When the vote button is clicked, send a POST request */
	votebtn.onclick = function(){
		/* If nothing was selected, throw an error */
		if(!error()) {
			var path = "/vote/" + selected;
			var form = document.createElement("form");
			form.setAttribute("method", "post");
	    	form.setAttribute("action", path);
			document.body.appendChild(form);
			form.submit();
			console.log("voted for: " + selected );
		}
	};

	/* 15 possible icons to be displayed for each card */
	var icons = {
		1: "images/icons/startup.svg",
		2: "images/icons/telescope.svg",
		3: "images/icons/satellite.svg",
		4: "images/icons/solar-system.svg",
		5: "images/icons/solar-system-2.svg",
		6: "images/icons/aqualung.svg",
		7: "images/icons/space-ship.svg",
		8: "images/icons/ufo.svg",
		9: "images/icons/planet.svg",
		10: "images/icons/robot.svg",
		11: "images/icons/robot-2.svg",
		12: "images/icons/space-ship-2.svg",
		13: "images/icons/moon-rover.svg",
		14: "images/icons/moon-rover-2.svg",
		15: "images/icons/space-ship-3.svg"
	};
	var NUM_ICONS = 15;

	/* Adds/removes check marks accordingly, and updates the selected variable
	   @param vote_id: the id of the check mark corresponding to this card
	   @param display_id: the id of this card, which is also the id of its display in the db
	 */
	function selectCard(vote_id, display_id) {
		/* Visibility of the checkmark of the card that was selected */
		var visibility = document.getElementById(vote_id).style.visibility;

		/* We have already selected a card */
		if(selected !== null) {
			/* The ID of the check mark that was previously selected */
			var prev_vote_id = selected_vote_id;

			/* Check if we are trying to deselect the card we already selected */
			if(prev_vote_id === vote_id) {
				/* DESELECT the checkmark */
				document.getElementById(vote_id).style.visibility = "hidden";
				/* Since we clicked the card we already selected, we now have nothing selected */
				selected = null;
				selected_vote_id = null;
			}
			/* Check if we are trying to select a different card than what we previously selected */
			else if(prev_vote_id !== vote_id) {
				/* DESELECT the previous card we selected */
				document.getElementById(prev_vote_id).style.visibility = "hidden";
				/* SELECT the new card */
				document.getElementById(vote_id).style.visibility = "visible";
				/* Update the display we selected */
				selected = display_id;
				selected_vote_id = vote_id;
			}	
		}
		/* We have no cards currently selected */
		else {
			document.getElementById(vote_id).style.visibility = "visible";
			selected = display_id;
			selected_vote_id = vote_id;
			/* Hide the submission error (if visible) once a card has been selected */
			error();
		}
	}

	/* Get a random icon from the icons object */
	function getRandomIcon() {
		/* Random number between 1 and 15 */
		var min = 1;
		var max = NUM_ICONS;
		var randomNum = Math.floor(Math.random() * (max - min + 1)) + min;
		return icons[randomNum];
	}

	/* Get a number between 1 and the number of icons. If the number
	   passed in is equal to the number of icons, reset. */
	function getNotRandomNumber(count) {
		if(count >= NUM_ICONS) {
			return 1;
		}
		return count + 1;
	}

	/* Get an icon based on the number given */
	function getIcon(count) {
		return icons[count];
	}

	function error() {
		if(selected === null) {
			console.log("It null fam");
			document.getElementById('errormsg').style.visibility = "visible";
			return true;
		}
		document.getElementById('errormsg').style.visibility = "hidden";
		return false;
	}

	/* Give each card a random icon */
	function populateCardIcons() {
		var icon_num = 0;
		for(var elem = 1; elem <= num_displays; elem++) {
			var id = "i" + elem;
			// var icon = getRandomIcon();
			icon_num = getNotRandomNumber(icon_num);
			var icon = getIcon(icon_num);
			document.getElementById(id).src = icon; 
		}
	}
	populateCardIcons();
	
	
</script>